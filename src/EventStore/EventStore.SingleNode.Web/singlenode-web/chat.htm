<!doctype html>
<html>
<head>
    <title>Chat</title>
    <script src="/web/es/lib/jquery/jquery-1.8.0.min.js" type="text/javascript"></script>
    <script src="/web/es/lib/jsrender/jsrender.js" type="text/javascript"></script>
    <script src="/web/es/js/es.tmpl.js" type="text/javascript"></script>
    <script id="r-head">
        es.tmpl.renderHead();
    </script>   
    <style>
        .chat-window {
            width: 98%;
            border: 1px solid #d6d6d6;
            border-radius: 5px;
            margin: 10px 0;
            cursor: default !important;
        }
        .input-window {
            width: 100%;
        }
        .input-window .username {
            width: 10%;
            margin: 10px 0;
        }
        .input-window .message-input{
            margin: 10px;
            width: 80%;
        }    
        .input-window .send {
            width: 10%;
        }
        .input-window .send, .input-dialog .submit {
            background-color: whitesmoke;
            color: #222222;
            border: 1px solid #d6d6d6;
            border-radius: 4px;
            padding: 5px;
            margin: 3px;
            text-align: center;
        }
        
    </style>
</head>
<body>
    <div id="content">
        <h2>
            EventStore based Chat</h2>
        <h3 class="chartroom">
            Room
        </h3>
        <textarea readonly="readonly" cols="70" rows="30" class="chat-window"></textarea>
        <form class="input-window">
        <span class="username"></span>
        <input type="text" class="message-input" />
        <input type="submit" class="send" value="Send" />
        </form>
        <form class="input-dialog" style="display: none">
        <div>
            Your name:
            <input type="text" class="input-name" value="John Smith" /></div>
        <div>
            Chat room:
            <input type="text" class="input-room" value="GeneralChat" /></div>
        <input type="submit" class="submit" value="Enter" />
        </form>
        <div class="error" style="display: none">
        </div>
        <script id="r-body">
            es.tmpl.renderBody();
        </script>
    </div>
    <script src="/web/es/lib/jquery/jquery-ui-1.8.23.min.js" type="text/javascript"></script>
    <script src="/web/es/js/projections/v8/Prelude/Modules.js"> </script>
    <script src="/web/es/js/projections/v8/Prelude/Projections.js"> </script>
    <script src="/web/es/js/projections/es.projections.environment.js"> </script>
    <script src="/web/es/js/projections/v8/Prelude/1Prelude.js"> </script>
    <script src="/web/es/js/projections/es.projection.js"> </script>
    <script src="/web/es/js/projections/es.api.js"> </script>
    <script>
        $(function () {

            var userName = null;
            var chatRoomName = null;

            tryLoadUserData();

            $(".input-dialog")
                .dialog({
                    modal: true,
                    closeOnEscape: false,
                    open: function(event, ui) {
                        $(this).closest('.ui-dialog').find('.ui-dialog-titlebar-close').hide();
                    }
                })
                .submit(onUserDataInput)
                .show();

            $(".input-window").submit(onMessageInput);

            $(".input-dialog").bind("dialogclose", function (event, ui) {
                var projection = initProjection(userName, chatRoomName);
                projection.start();
            });

            function initProjection(userName, chatRoomName) {
                return es.projection({
                    body: function () {
                        var stream = chatRoomName == '$all' ? fromAll() : fromStream('chat-' + chatRoomName);
                        stream.when({
                            'ChatMessage': function (state, event) {
                                var body = event.body;
                                return { "text": (body.time + "> " + body.sender + ": " + body.message) };
                            },
                            'UserJoinedChat': function (state, event) {
                                var body = event.body;
                                return { "text": (body.time + "> user " + body.user + " has joined the chat!") };
                            },
                            $any: function(state, event) {
                                return { "text": ('GENERIC EVENT: ' + JSON.stringify(event)) };
                            }
                        });
                    },
                    onStateUpdate: function (state) {
                        var currentText = $('.chat-window').val();

                        var chatWindow = $('.chat-window').val(currentText + (state.text || "") + "\r\n")[0];
                        chatWindow.scrollTop = chatWindow.scrollHeight;
                    },
                    showError: function (err) {
                        $('.error').text(err);
                    },
                    hideError: function () {
                        $('.error').hide().text("");
                    }
                });
            }

            function onUserDataInput(event) {
                event.preventDefault();

                userName = $(".input-dialog .input-name").val();
                chatRoomName = $(".input-dialog .input-room").val();

                if (!userName || !chatRoomName)
                    return;

                $(".input-window .username").append(userName + ": ");
                $(".chartroom").append(chatRoomName);
                $(".input-window .message-input")[0].focus();

                trySaveUserData(userName, chatRoomName);

                $(this).dialog("close");

                (function postUserEnteredChatEvent() {
                    var data = {
                        time: getFormattedTime(),
                        user: userName
                    };
                    es.postEvent({
                        data: data,
                        stream: 'chat-' + chatRoomName,
                        eventType: 'UserJoinedChat'
                    });
                })();
            }

            function onMessageInput(event) {
                event.preventDefault();

                var input = $(".message-input").val();
                if (!input)
                    return;

                var data = {
                    sender: userName,
                    message: input,
                    time: getFormattedTime()
                };
                es.postEvent({
                    data: data,
                    stream: "chat-" + chatRoomName,
                    eventType: 'ChatMessage',
                    success: function () {
                        $(".input-window .message-input").val("");
                    }
                });
            }

            function trySaveUserData(es_username, es_chatroom) {
                if (window.localStorage) {
                    localStorage.setItem('$es_username', es_username);
                    localStorage.setItem('$es_chatroom', es_chatroom);
                }
            };

            function tryLoadUserData() {
                if (window.localStorage) {
                    var es_username = localStorage.getItem('$es_username');
                    var es_chatroom = localStorage.getItem('$es_chatroom');

                    if (es_username)
                        $(".input-dialog .input-name").val(es_username);
                    if (es_chatroom)
                        $(".input-dialog .input-room").val(es_chatroom);
                }
            };

            function getFormattedTime() {
                var now = new Date();
                return _format(now.getHours()) + ":" + _format(now.getMinutes()) + ":" + _format(now.getSeconds());

                function _format(timeUnit) {
                    if (timeUnit < 10)
                        return "0" + timeUnit;
                    else
                        return "" + timeUnit;
                }
            }

        });
    </script>
</body>
</html>
