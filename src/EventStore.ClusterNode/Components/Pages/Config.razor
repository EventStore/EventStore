@page "/Config"
@using System.Net
@using System.Text.Json
@using System.Text.Json.Serialization
@using EventStore.Core
@inject ClusterVNodeOptions Configuration

<PageTitle>KurrentDB: Configuration</PageTitle>

<MudDataGrid @ref="_dataGrid" Items="@_items" Dense="@true" Filterable="true">
	<Columns>
		<PropertyColumn Property="x => x.Metadata.Name" Title="Option" />
		<TemplateColumn>
			<CellTemplate>
				<MudTooltip Text="@context.Item.Metadata.Description">
					<MudIcon Icon="@Icons.Material.Outlined.Info" />
				</MudTooltip>
			</CellTemplate>
		</TemplateColumn>
		<PropertyColumn Property="x => x.DisplayValue" Title="Value" />
		<PropertyColumn Property="x => x.SourceDisplayName" Title="Source"/>
		<TemplateColumn Title="Default">
			<CellTemplate>
				<MudCheckBox Disabled="@true" Value="context.Item.IsDefault"></MudCheckBox>
			</CellTemplate>
		</TemplateColumn>
	</Columns>
</MudDataGrid>


@code {
	MudDataGrid<LoadedOption> _dataGrid;
	IReadOnlyCollection<LoadedOption> _items;

	protected override void OnInitialized() {
		base.OnInitialized();
		_items = Configuration.LoadedOptions.Select(x => x.Value).ToList();
	}

	class JsonIpAddresConverter : JsonConverter<IPAddress> {
		public override IPAddress Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) {
			return IPAddress.Parse(reader.GetString());
		}

		public override void Write(Utf8JsonWriter writer, IPAddress value, JsonSerializerOptions options) {
			writer.WriteStringValue(value.ToString());
		}
	}

	class OptionsMetadataConverter : JsonConverter<OptionMetadata> {
		public override OptionMetadata Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) {
			throw new NotImplementedException();
		}

		public override void Write(Utf8JsonWriter writer, OptionMetadata value, JsonSerializerOptions options) {
			writer.WriteStringValue((string)null);
		}
	}

}
