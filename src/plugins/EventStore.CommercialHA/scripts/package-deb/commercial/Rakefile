NAME = ENV["PACKAGE_NAME"]
DISTRO_NAME = ENV["DISTRO_NAME"]
DISTRO_TAG = ENV["DISTRO_TAG"]
VERSION = ENV["VERSION"]
BUILD_DIR = './build'
VENDOR = 'Event Store Ltd'
MAINTAINER = 'Event Store Ltd <info@geteventstore.com>'
ABSOLUTE_BUILD_DIR = File.expand_path(BUILD_DIR)
TAR_DIR = "EventStore-Commercial-Linux-#{DISTRO_NAME}-v#{VERSION}"
ITERATION = ENV["ITERATION"]

task :clean do
  sh %{ git clean -xdf }
end

task :build do
  sh %{ mkdir -p #{BUILD_DIR} }
  sh %{ mkdir -p #{BUILD_DIR}/usr/share/eventstore }
  sh %{ mkdir -p #{BUILD_DIR}/etc/init }
  sh %{ mkdir -p #{BUILD_DIR}/var/lib/eventstore }
  sh %{ mkdir -p #{BUILD_DIR}/var/log/eventstore }
  sh %{ mkdir -p #{BUILD_DIR}/etc/eventstore }

  sh %{ cp ../../../packages/ubuntu/EventStore-Commercial-Linux-#{DISTRO_NAME}-v#{VERSION}.tar.gz . }
  sh %{ tar -xf EventStore-Commercial-Linux-#{DISTRO_NAME}-v#{VERSION}.tar.gz }

  sh %{ cp -R #{TAR_DIR}/* #{BUILD_DIR}/usr/share/eventstore/ }
  #  TODO: Ensure that these are included in the package
  # sh %{ mv #{TAR_DIR}/libjs1.so #{BUILD_DIR}/usr/lib/. }

  sh %{ mv #{BUILD_DIR}/usr/share/eventstore/logconfig.json #{BUILD_DIR}/etc/eventstore/. }
  sh %{ cp ./eventstore.conf #{BUILD_DIR}/etc/eventstore/. }

  sh %{ mkdir -p #{BUILD_DIR}/etc/systemd/system }
  sh %{ cp ./eventstore.systemd #{BUILD_DIR}/etc/systemd/system/eventstore.service }

  sh %{ rm -rf #{TAR_DIR} }
end

task :deb do
  sh %{ fpm -s dir -t deb -n #{NAME} -v #{VERSION} -C build \
    -a amd64 \
    --config-files /etc/eventstore \
    --iteration "#{ITERATION}" \
    --before-install ../pkg-scripts/preinst \
    --after-install ../pkg-scripts/postinst \
    --before-remove ../pkg-scripts/prerm \
    --after-remove ../pkg-scripts/postrm \
    --vendor "#{VENDOR}" \
    --maintainer "#{MAINTAINER}" \
    --description "Event Store is a domain specific database for Event Sourcing" \
    --url "https://eventstore.org" \
    --deb-user root \
    --deb-group root \
    --deb-upstart ./eventstore.systemd \
    --depends 'libc6 > 2.19'
  }
end

task :default => [ :clean, :build, :deb ]
