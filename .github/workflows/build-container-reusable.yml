name: Build Container - Reusable

on:
  workflow_call:
    inputs:
      container-runtime:
        required: true
        type: string

jobs:
  build-container:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    name: ci/github/build-${{ inputs.container-runtime }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install net8.0
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Calculate Version
      run: |
        dotnet tool restore
        version=$(dotnet tool run minver -- --tag-prefix=oss-v)-${{ inputs.container-runtime }}
        echo "VERSION=${version}" >> $GITHUB_ENV
    - name: Setup Variables
      id: variables
      uses: kanga333/variable-mapper@master
      with:
        key: "${{ inputs.container-runtime }}"
        map: |
          {
            "jammy": {
              "runtime": "linux-x64"
            },
            "bookworm-slim": {
              "runtime": "linux-x64"
            },
            "alpine": {
              "runtime": "linux-musl-x64"
            }
          }
        export_to: output
    - name: Build
      uses: docker/build-push-action@v4
      with:
        context: .
        load: true
        tags: eventstore
        build-args: |
          CONTAINER_RUNTIME=${{ inputs.container-runtime }}
          RUNTIME=${{ steps.variables.outputs.runtime }}
    - name: Verify Build
      run: |
        docker run --rm eventstore --insecure --what-if
    - name: Build Test Container
      uses: docker/build-push-action@v4
      with:
        context: .
        load: true
        target: test
        tags: eventstore-test
        build-args: |
          CONTAINER_RUNTIME=${{ inputs.container-runtime }}
          RUNTIME=${{ steps.variables.outputs.runtime }}
    - name: Run Tests
      run: |
          docker run \
          --volume $(pwd)/test-results:/build/test-results \
          --rm \
          eventstore-test
    - name: Publish Test Results (HTML)
      uses: actions/upload-artifact@v3
      if: always()
      with:
        path: test-results/test-results.html
        name: test-results-${{ inputs.container-runtime }}.html
    - name: Publish Test Results (All)
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ inputs.container-runtime }}
        path: test-results
    - name: Push GitHub Container Registry
      if: always() && github.event_name == 'push'
      shell: bash
      run: |
        docker tag eventstore ghcr.io/eventstore/eventstore:${{ env.VERSION }}
        docker push ghcr.io/eventstore/eventstore:${{ env.VERSION }}
    - name: Push GitHub Container Registry (CI)
      if: always() && github.event_name == 'push' && inputs.container-runtime == 'jammy' && github.ref == 'refs/heads/master'
      shell: bash
      run: |
        docker tag eventstore ghcr.io/eventstore/eventstore:ci
        docker push ghcr.io/eventstore/eventstore:ci

